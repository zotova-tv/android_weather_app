plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android-extensions'

    id 'kotlin-kapt'
    id 'com.google.gms.google-services'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "ru.gb.weather"
        minSdk 29
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    Properties keystoreProperties = new Properties()
    keystoreProperties.load(project.rootProject.file("keystore.properties").newDataInputStream())

    signingConfigs {
        release {
            storeFile file("keystore.jks")
            storePassword keystoreProperties.getProperty("password", "")
            keyAlias "WeatherApp"
            keyPassword keystoreProperties.getProperty("password", "")
        }
    }

    buildFeatures {
        viewBinding true
    }

    buildTypes.each {
        Properties properties = new Properties()
        properties.load(project.rootProject.file("apikey.properties").newDataInputStream())
        def apiKey  = properties.getProperty("yandex_weather_api_key", "")
        it.buildConfigField "String", "WEATHER_API_KEY", apiKey
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "TYPE", '"RELEASE"'
        }

        debug {
            versionNameSuffix "-debug"
            buildConfigField "String", "TYPE", '"DEBUG"'
        }

        beta {
            initWith debug
            versionNameSuffix "-beta"
            buildConfigField "String", "TYPE", '"BETA"'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    flavorDimensions 'version'
    productFlavors {
        free {
            dimension 'version'
            versionNameSuffix '.free'
        }
        paid {
            dimension 'version'
            versionNameSuffix '.paid'
        }
    }
}

dependencies {
    // room
    implementation 'androidx.room:room-runtime:2.4.2'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.firebase:firebase-messaging:20.1.0'
    implementation 'com.google.firebase:firebase-messaging-ktx:23.0.2'
    kapt 'androidx.room:room-compiler:2.4.2'

    implementation 'com.google.android.gms:play-services-maps:17.0.0'

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation "io.coil-kt:coil-svg:2.0.0-rc01"
    implementation "io.coil-kt:coil-compose:2.0.0-rc01"

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.2'

    implementation 'com.squareup.picasso:picasso:2.71828'
}